digraph "" {
Emitter -> Initializable [ label="1" ];
Emitter -> Ownable [ label="2" ];
Emitter[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Emitter</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    storeBeacon(address)</TD></TR><TR><TD align="left">    forwardEvent()</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _getStorageBeacon()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _beacon</TD></TR></TABLE> >];

StorageBeacon -> Initializable [ label="1" ];
StorageBeacon -> Ownable [ label="2" ];
StorageBeacon[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>StorageBeacon</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    issueUserID(StorageBeacon.UserConfig)</TD></TR><TR><TD align="left">    saveUserProxy(address,address)</TD></TR><TR><TD align="left">    saveTaskId(address,bytes32)</TD></TR><TR><TD align="left">    changeVariableConfig(StorageBeacon.VariableConfig)</TD></TR><TR><TD align="left">    addTokenToDatabase(address)</TD></TR><TR><TD align="left">    storeBeacon(address)</TD></TR><TR><TD align="left">    changeEmergencyMode(StorageBeacon.EmergencyMode)</TD></TR><TR><TD align="left">    changeEmitterStatus(bool)</TD></TR><TR><TD align="left">    getUserDetailsById(uint256)</TD></TR><TR><TD align="left">    getFixedConfig()</TD></TR><TR><TD align="left">    getVariableConfig()</TD></TR><TR><TD align="left">    getEmergencyMode()</TD></TR><TR><TD align="left">    getProxyByUser(address)</TD></TR><TR><TD align="left">    getTaskID(address)</TD></TR><TR><TD align="left">    getUserByProxy(address)</TD></TR><TR><TD align="left">    queryTokenDatabase(address)</TD></TR><TR><TD align="left">    isUser(address)</TD></TR><TR><TD align="left">    getEmitterStatus()</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    hasRole(bytes4)</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    taskIDs</TD></TR><TR><TD align="left">    tokenDatabase</TD></TR><TR><TD align="left">    proxyDatabase</TD></TR><TR><TD align="left">    idToUserDetails</TD></TR><TR><TD align="left">    proxyToUser</TD></TR><TR><TD align="left">    userToProxy</TD></TR><TR><TD align="left">    userToFailedERC</TD></TR><TR><TD align="left">    userToFailedTokenCount</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    fxConfig</TD></TR><TR><TD align="left">    varConfig</TD></TR><TR><TD align="left">    eMode</TD></TR><TR><TD align="left">    userDatabase</TD></TR><TR><TD align="left">    internalId</TD></TR><TR><TD align="left">    beacon<font color="blue" POINT-SIZE="10"> (ozUpgradeableBeacon)</font></TD></TR><TR><TD align="left">    isEmitter</TD></TR></TABLE> >];

ozUpgradeableBeacon -> UpgradeableBeacon;
ozUpgradeableBeacon[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ozUpgradeableBeacon</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    storageBeacon(uint256)</TD></TR><TR><TD align="left">    upgradeStorageBeacon(address)</TD></TR><TR><TD align="left">    setAuth(address)</TD></TR><TR><TD align="left">    canCall(address,address,bytes4)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _storageBeacons</TD></TR><TR><TD align="left">    auth<font color="blue" POINT-SIZE="10"> (RolesAuthority)</font></TD></TR></TABLE> >];

AggregatorV3Interface[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>AggregatorV3Interface</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    decimals()</TD></TR><TR><TD align="left">    description()</TD></TR><TR><TD align="left">    version()</TD></TR><TR><TD align="left">    getRoundData(uint80)</TD></TR><TR><TD align="left">    latestRoundData()</TD></TR></TABLE> >];

Ownable -> Context;
Ownable[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Ownable</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    owner()</TD></TR><TR><TD align="left">    renounceOwnership()</TD></TR><TR><TD align="left">    transferOwnership(address)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _transferOwnership(address)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    onlyOwner()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _owner</TD></TR></TABLE> >];

IBeacon[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IBeacon</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    implementation()</TD></TR></TABLE> >];

UpgradeableBeacon -> IBeacon [ label="1" ];
UpgradeableBeacon -> Ownable [ label="2" ];
UpgradeableBeacon[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>UpgradeableBeacon</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left"><font color="#FFA500">    implementation()</font></TD></TR><TR><TD align="left">    upgradeTo(address)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _setImplementation(address)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _implementation</TD></TR></TABLE> >];

Initializable[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Initializable</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _isConstructor()</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    initializer()</TD></TR><TR><TD align="left">    onlyInitializing()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _initialized</TD></TR><TR><TD align="left">    _initializing</TD></TR></TABLE> >];

IERC20[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IERC20</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    totalSupply()</TD></TR><TR><TD align="left">    balanceOf(address)</TD></TR><TR><TD align="left">    transfer(address,uint256)</TD></TR><TR><TD align="left">    allowance(address,address)</TD></TR><TR><TD align="left">    approve(address,uint256)</TD></TR><TR><TD align="left">    transferFrom(address,address,uint256)</TD></TR></TABLE> >];

Address[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Address</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    isContract(address)</TD></TR><TR><TD align="left">    sendValue(address,uint256)</TD></TR><TR><TD align="left">    functionCall(address,bytes)</TD></TR><TR><TD align="left">    functionCall(address,bytes,string)</TD></TR><TR><TD align="left">    functionCallWithValue(address,bytes,uint256)</TD></TR><TR><TD align="left">    functionCallWithValue(address,bytes,uint256,string)</TD></TR><TR><TD align="left">    functionStaticCall(address,bytes)</TD></TR><TR><TD align="left">    functionStaticCall(address,bytes,string)</TD></TR><TR><TD align="left">    functionDelegateCall(address,bytes)</TD></TR><TR><TD align="left">    functionDelegateCall(address,bytes,string)</TD></TR><TR><TD align="left">    verifyCallResult(bool,bytes,string)</TD></TR></TABLE> >];

Context[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Context</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _msgSender()</TD></TR><TR><TD align="left">    _msgData()</TD></TR></TABLE> >];

Auth[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Auth</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    setAuthority(Authority)</TD></TR><TR><TD align="left">    setOwner(address)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    isAuthorized(address,bytes4)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    requiresAuth()</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    owner</TD></TR><TR><TD align="left">    authority<font color="blue" POINT-SIZE="10"> (Authority)</font></TD></TR></TABLE> >];

Authority[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Authority</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    canCall(address,address,bytes4)</TD></TR></TABLE> >];

RolesAuthority -> Auth [ label="1" ];
RolesAuthority -> Authority [ label="2" ];
RolesAuthority[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>RolesAuthority</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    doesUserHaveRole(address,uint8)</TD></TR><TR><TD align="left">    doesRoleHaveCapability(uint8,address,bytes4)</TD></TR><TR><TD align="left"><font color="#FFA500">    canCall(address,address,bytes4)</font></TD></TR><TR><TD align="left">    setPublicCapability(address,bytes4,bool)</TD></TR><TR><TD align="left">    setRoleCapability(uint8,address,bytes4,bool)</TD></TR><TR><TD align="left">    setUserRole(address,uint8,bool)</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    getUserRoles</TD></TR><TR><TD align="left">    isCapabilityPublic</TD></TR><TR><TD align="left">    getRolesWithCapability</TD></TR></TABLE> >];

IUniswapV3SwapCallback[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IUniswapV3SwapCallback</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    uniswapV3SwapCallback(int256,int256,bytes)</TD></TR></TABLE> >];

ISwapRouter -> IUniswapV3SwapCallback;
ISwapRouter[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ISwapRouter</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    exactInputSingle(ISwapRouter.ExactInputSingleParams)</TD></TR><TR><TD align="left">    exactInput(ISwapRouter.ExactInputParams)</TD></TR><TR><TD align="left">    exactOutputSingle(ISwapRouter.ExactOutputSingleParams)</TD></TR><TR><TD align="left">    exactOutput(ISwapRouter.ExactOutputParams)</TD></TR></TABLE> >];

console[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>console</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _sendLogPayload(bytes)</TD></TR><TR><TD align="left">    log()</TD></TR><TR><TD align="left">    logInt(int256)</TD></TR><TR><TD align="left">    logUint(uint256)</TD></TR><TR><TD align="left">    logString(string)</TD></TR><TR><TD align="left">    logBool(bool)</TD></TR><TR><TD align="left">    logAddress(address)</TD></TR><TR><TD align="left">    logBytes(bytes)</TD></TR><TR><TD align="left">    logBytes1(bytes1)</TD></TR><TR><TD align="left">    logBytes2(bytes2)</TD></TR><TR><TD align="left">    logBytes3(bytes3)</TD></TR><TR><TD align="left">    logBytes4(bytes4)</TD></TR><TR><TD align="left">    logBytes5(bytes5)</TD></TR><TR><TD align="left">    logBytes6(bytes6)</TD></TR><TR><TD align="left">    logBytes7(bytes7)</TD></TR><TR><TD align="left">    logBytes8(bytes8)</TD></TR><TR><TD align="left">    logBytes9(bytes9)</TD></TR><TR><TD align="left">    logBytes10(bytes10)</TD></TR><TR><TD align="left">    logBytes11(bytes11)</TD></TR><TR><TD align="left">    logBytes12(bytes12)</TD></TR><TR><TD align="left">    logBytes13(bytes13)</TD></TR><TR><TD align="left">    logBytes14(bytes14)</TD></TR><TR><TD align="left">    logBytes15(bytes15)</TD></TR><TR><TD align="left">    logBytes16(bytes16)</TD></TR><TR><TD align="left">    logBytes17(bytes17)</TD></TR><TR><TD align="left">    logBytes18(bytes18)</TD></TR><TR><TD align="left">    logBytes19(bytes19)</TD></TR><TR><TD align="left">    logBytes20(bytes20)</TD></TR><TR><TD align="left">    logBytes21(bytes21)</TD></TR><TR><TD align="left">    logBytes22(bytes22)</TD></TR><TR><TD align="left">    logBytes23(bytes23)</TD></TR><TR><TD align="left">    logBytes24(bytes24)</TD></TR><TR><TD align="left">    logBytes25(bytes25)</TD></TR><TR><TD align="left">    logBytes26(bytes26)</TD></TR><TR><TD align="left">    logBytes27(bytes27)</TD></TR><TR><TD align="left">    logBytes28(bytes28)</TD></TR><TR><TD align="left">    logBytes29(bytes29)</TD></TR><TR><TD align="left">    logBytes30(bytes30)</TD></TR><TR><TD align="left">    logBytes31(bytes31)</TD></TR><TR><TD align="left">    logBytes32(bytes32)</TD></TR><TR><TD align="left">    log(uint256)</TD></TR><TR><TD align="left">    log(string)</TD></TR><TR><TD align="left">    log(bool)</TD></TR><TR><TD align="left">    log(address)</TD></TR><TR><TD align="left">    log(uint256,uint256)</TD></TR><TR><TD align="left">    log(uint256,string)</TD></TR><TR><TD align="left">    log(uint256,bool)</TD></TR><TR><TD align="left">    log(uint256,address)</TD></TR><TR><TD align="left">    log(string,uint256)</TD></TR><TR><TD align="left">    log(string,string)</TD></TR><TR><TD align="left">    log(string,bool)</TD></TR><TR><TD align="left">    log(string,address)</TD></TR><TR><TD align="left">    log(bool,uint256)</TD></TR><TR><TD align="left">    log(bool,string)</TD></TR><TR><TD align="left">    log(bool,bool)</TD></TR><TR><TD align="left">    log(bool,address)</TD></TR><TR><TD align="left">    log(address,uint256)</TD></TR><TR><TD align="left">    log(address,string)</TD></TR><TR><TD align="left">    log(address,bool)</TD></TR><TR><TD align="left">    log(address,address)</TD></TR><TR><TD align="left">    log(uint256,uint256,uint256)</TD></TR><TR><TD align="left">    log(uint256,uint256,string)</TD></TR><TR><TD align="left">    log(uint256,uint256,bool)</TD></TR><TR><TD align="left">    log(uint256,uint256,address)</TD></TR><TR><TD align="left">    log(uint256,string,uint256)</TD></TR><TR><TD align="left">    log(uint256,string,string)</TD></TR><TR><TD align="left">    log(uint256,string,bool)</TD></TR><TR><TD align="left">    log(uint256,string,address)</TD></TR><TR><TD align="left">    log(uint256,bool,uint256)</TD></TR><TR><TD align="left">    log(uint256,bool,string)</TD></TR><TR><TD align="left">    log(uint256,bool,bool)</TD></TR><TR><TD align="left">    log(uint256,bool,address)</TD></TR><TR><TD align="left">    log(uint256,address,uint256)</TD></TR><TR><TD align="left">    log(uint256,address,string)</TD></TR><TR><TD align="left">    log(uint256,address,bool)</TD></TR><TR><TD align="left">    log(uint256,address,address)</TD></TR><TR><TD align="left">    log(string,uint256,uint256)</TD></TR><TR><TD align="left">    log(string,uint256,string)</TD></TR><TR><TD align="left">    log(string,uint256,bool)</TD></TR><TR><TD align="left">    log(string,uint256,address)</TD></TR><TR><TD align="left">    log(string,string,uint256)</TD></TR><TR><TD align="left">    log(string,string,string)</TD></TR><TR><TD align="left">    log(string,string,bool)</TD></TR><TR><TD align="left">    log(string,string,address)</TD></TR><TR><TD align="left">    log(string,bool,uint256)</TD></TR><TR><TD align="left">    log(string,bool,string)</TD></TR><TR><TD align="left">    log(string,bool,bool)</TD></TR><TR><TD align="left">    log(string,bool,address)</TD></TR><TR><TD align="left">    log(string,address,uint256)</TD></TR><TR><TD align="left">    log(string,address,string)</TD></TR><TR><TD align="left">    log(string,address,bool)</TD></TR><TR><TD align="left">    log(string,address,address)</TD></TR><TR><TD align="left">    log(bool,uint256,uint256)</TD></TR><TR><TD align="left">    log(bool,uint256,string)</TD></TR><TR><TD align="left">    log(bool,uint256,bool)</TD></TR><TR><TD align="left">    log(bool,uint256,address)</TD></TR><TR><TD align="left">    log(bool,string,uint256)</TD></TR><TR><TD align="left">    log(bool,string,string)</TD></TR><TR><TD align="left">    log(bool,string,bool)</TD></TR><TR><TD align="left">    log(bool,string,address)</TD></TR><TR><TD align="left">    log(bool,bool,uint256)</TD></TR><TR><TD align="left">    log(bool,bool,string)</TD></TR><TR><TD align="left">    log(bool,bool,bool)</TD></TR><TR><TD align="left">    log(bool,bool,address)</TD></TR><TR><TD align="left">    log(bool,address,uint256)</TD></TR><TR><TD align="left">    log(bool,address,string)</TD></TR><TR><TD align="left">    log(bool,address,bool)</TD></TR><TR><TD align="left">    log(bool,address,address)</TD></TR><TR><TD align="left">    log(address,uint256,uint256)</TD></TR><TR><TD align="left">    log(address,uint256,string)</TD></TR><TR><TD align="left">    log(address,uint256,bool)</TD></TR><TR><TD align="left">    log(address,uint256,address)</TD></TR><TR><TD align="left">    log(address,string,uint256)</TD></TR><TR><TD align="left">    log(address,string,string)</TD></TR><TR><TD align="left">    log(address,string,bool)</TD></TR><TR><TD align="left">    log(address,string,address)</TD></TR><TR><TD align="left">    log(address,bool,uint256)</TD></TR><TR><TD align="left">    log(address,bool,string)</TD></TR><TR><TD align="left">    log(address,bool,bool)</TD></TR><TR><TD align="left">    log(address,bool,address)</TD></TR><TR><TD align="left">    log(address,address,uint256)</TD></TR><TR><TD align="left">    log(address,address,string)</TD></TR><TR><TD align="left">    log(address,address,bool)</TD></TR><TR><TD align="left">    log(address,address,address)</TD></TR><TR><TD align="left">    log(uint256,uint256,uint256,uint256)</TD></TR><TR><TD align="left">    log(uint256,uint256,uint256,string)</TD></TR><TR><TD align="left">    log(uint256,uint256,uint256,bool)</TD></TR><TR><TD align="left">    log(uint256,uint256,uint256,address)</TD></TR><TR><TD align="left">    log(uint256,uint256,string,uint256)</TD></TR><TR><TD align="left">    log(uint256,uint256,string,string)</TD></TR><TR><TD align="left">    log(uint256,uint256,string,bool)</TD></TR><TR><TD align="left">    log(uint256,uint256,string,address)</TD></TR><TR><TD align="left">    log(uint256,uint256,bool,uint256)</TD></TR><TR><TD align="left">    log(uint256,uint256,bool,string)</TD></TR><TR><TD align="left">    log(uint256,uint256,bool,bool)</TD></TR><TR><TD align="left">    log(uint256,uint256,bool,address)</TD></TR><TR><TD align="left">    log(uint256,uint256,address,uint256)</TD></TR><TR><TD align="left">    log(uint256,uint256,address,string)</TD></TR><TR><TD align="left">    log(uint256,uint256,address,bool)</TD></TR><TR><TD align="left">    log(uint256,uint256,address,address)</TD></TR><TR><TD align="left">    log(uint256,string,uint256,uint256)</TD></TR><TR><TD align="left">    log(uint256,string,uint256,string)</TD></TR><TR><TD align="left">    log(uint256,string,uint256,bool)</TD></TR><TR><TD align="left">    log(uint256,string,uint256,address)</TD></TR><TR><TD align="left">    log(uint256,string,string,uint256)</TD></TR><TR><TD align="left">    log(uint256,string,string,string)</TD></TR><TR><TD align="left">    log(uint256,string,string,bool)</TD></TR><TR><TD align="left">    log(uint256,string,string,address)</TD></TR><TR><TD align="left">    log(uint256,string,bool,uint256)</TD></TR><TR><TD align="left">    log(uint256,string,bool,string)</TD></TR><TR><TD align="left">    log(uint256,string,bool,bool)</TD></TR><TR><TD align="left">    log(uint256,string,bool,address)</TD></TR><TR><TD align="left">    log(uint256,string,address,uint256)</TD></TR><TR><TD align="left">    log(uint256,string,address,string)</TD></TR><TR><TD align="left">    log(uint256,string,address,bool)</TD></TR><TR><TD align="left">    log(uint256,string,address,address)</TD></TR><TR><TD align="left">    log(uint256,bool,uint256,uint256)</TD></TR><TR><TD align="left">    log(uint256,bool,uint256,string)</TD></TR><TR><TD align="left">    log(uint256,bool,uint256,bool)</TD></TR><TR><TD align="left">    log(uint256,bool,uint256,address)</TD></TR><TR><TD align="left">    log(uint256,bool,string,uint256)</TD></TR><TR><TD align="left">    log(uint256,bool,string,string)</TD></TR><TR><TD align="left">    log(uint256,bool,string,bool)</TD></TR><TR><TD align="left">    log(uint256,bool,string,address)</TD></TR><TR><TD align="left">    log(uint256,bool,bool,uint256)</TD></TR><TR><TD align="left">    log(uint256,bool,bool,string)</TD></TR><TR><TD align="left">    log(uint256,bool,bool,bool)</TD></TR><TR><TD align="left">    log(uint256,bool,bool,address)</TD></TR><TR><TD align="left">    log(uint256,bool,address,uint256)</TD></TR><TR><TD align="left">    log(uint256,bool,address,string)</TD></TR><TR><TD align="left">    log(uint256,bool,address,bool)</TD></TR><TR><TD align="left">    log(uint256,bool,address,address)</TD></TR><TR><TD align="left">    log(uint256,address,uint256,uint256)</TD></TR><TR><TD align="left">    log(uint256,address,uint256,string)</TD></TR><TR><TD align="left">    log(uint256,address,uint256,bool)</TD></TR><TR><TD align="left">    log(uint256,address,uint256,address)</TD></TR><TR><TD align="left">    log(uint256,address,string,uint256)</TD></TR><TR><TD align="left">    log(uint256,address,string,string)</TD></TR><TR><TD align="left">    log(uint256,address,string,bool)</TD></TR><TR><TD align="left">    log(uint256,address,string,address)</TD></TR><TR><TD align="left">    log(uint256,address,bool,uint256)</TD></TR><TR><TD align="left">    log(uint256,address,bool,string)</TD></TR><TR><TD align="left">    log(uint256,address,bool,bool)</TD></TR><TR><TD align="left">    log(uint256,address,bool,address)</TD></TR><TR><TD align="left">    log(uint256,address,address,uint256)</TD></TR><TR><TD align="left">    log(uint256,address,address,string)</TD></TR><TR><TD align="left">    log(uint256,address,address,bool)</TD></TR><TR><TD align="left">    log(uint256,address,address,address)</TD></TR><TR><TD align="left">    log(string,uint256,uint256,uint256)</TD></TR><TR><TD align="left">    log(string,uint256,uint256,string)</TD></TR><TR><TD align="left">    log(string,uint256,uint256,bool)</TD></TR><TR><TD align="left">    log(string,uint256,uint256,address)</TD></TR><TR><TD align="left">    log(string,uint256,string,uint256)</TD></TR><TR><TD align="left">    log(string,uint256,string,string)</TD></TR><TR><TD align="left">    log(string,uint256,string,bool)</TD></TR><TR><TD align="left">    log(string,uint256,string,address)</TD></TR><TR><TD align="left">    log(string,uint256,bool,uint256)</TD></TR><TR><TD align="left">    log(string,uint256,bool,string)</TD></TR><TR><TD align="left">    log(string,uint256,bool,bool)</TD></TR><TR><TD align="left">    log(string,uint256,bool,address)</TD></TR><TR><TD align="left">    log(string,uint256,address,uint256)</TD></TR><TR><TD align="left">    log(string,uint256,address,string)</TD></TR><TR><TD align="left">    log(string,uint256,address,bool)</TD></TR><TR><TD align="left">    log(string,uint256,address,address)</TD></TR><TR><TD align="left">    log(string,string,uint256,uint256)</TD></TR><TR><TD align="left">    log(string,string,uint256,string)</TD></TR><TR><TD align="left">    log(string,string,uint256,bool)</TD></TR><TR><TD align="left">    log(string,string,uint256,address)</TD></TR><TR><TD align="left">    log(string,string,string,uint256)</TD></TR><TR><TD align="left">    log(string,string,string,string)</TD></TR><TR><TD align="left">    log(string,string,string,bool)</TD></TR><TR><TD align="left">    log(string,string,string,address)</TD></TR><TR><TD align="left">    log(string,string,bool,uint256)</TD></TR><TR><TD align="left">    log(string,string,bool,string)</TD></TR><TR><TD align="left">    log(string,string,bool,bool)</TD></TR><TR><TD align="left">    log(string,string,bool,address)</TD></TR><TR><TD align="left">    log(string,string,address,uint256)</TD></TR><TR><TD align="left">    log(string,string,address,string)</TD></TR><TR><TD align="left">    log(string,string,address,bool)</TD></TR><TR><TD align="left">    log(string,string,address,address)</TD></TR><TR><TD align="left">    log(string,bool,uint256,uint256)</TD></TR><TR><TD align="left">    log(string,bool,uint256,string)</TD></TR><TR><TD align="left">    log(string,bool,uint256,bool)</TD></TR><TR><TD align="left">    log(string,bool,uint256,address)</TD></TR><TR><TD align="left">    log(string,bool,string,uint256)</TD></TR><TR><TD align="left">    log(string,bool,string,string)</TD></TR><TR><TD align="left">    log(string,bool,string,bool)</TD></TR><TR><TD align="left">    log(string,bool,string,address)</TD></TR><TR><TD align="left">    log(string,bool,bool,uint256)</TD></TR><TR><TD align="left">    log(string,bool,bool,string)</TD></TR><TR><TD align="left">    log(string,bool,bool,bool)</TD></TR><TR><TD align="left">    log(string,bool,bool,address)</TD></TR><TR><TD align="left">    log(string,bool,address,uint256)</TD></TR><TR><TD align="left">    log(string,bool,address,string)</TD></TR><TR><TD align="left">    log(string,bool,address,bool)</TD></TR><TR><TD align="left">    log(string,bool,address,address)</TD></TR><TR><TD align="left">    log(string,address,uint256,uint256)</TD></TR><TR><TD align="left">    log(string,address,uint256,string)</TD></TR><TR><TD align="left">    log(string,address,uint256,bool)</TD></TR><TR><TD align="left">    log(string,address,uint256,address)</TD></TR><TR><TD align="left">    log(string,address,string,uint256)</TD></TR><TR><TD align="left">    log(string,address,string,string)</TD></TR><TR><TD align="left">    log(string,address,string,bool)</TD></TR><TR><TD align="left">    log(string,address,string,address)</TD></TR><TR><TD align="left">    log(string,address,bool,uint256)</TD></TR><TR><TD align="left">    log(string,address,bool,string)</TD></TR><TR><TD align="left">    log(string,address,bool,bool)</TD></TR><TR><TD align="left">    log(string,address,bool,address)</TD></TR><TR><TD align="left">    log(string,address,address,uint256)</TD></TR><TR><TD align="left">    log(string,address,address,string)</TD></TR><TR><TD align="left">    log(string,address,address,bool)</TD></TR><TR><TD align="left">    log(string,address,address,address)</TD></TR><TR><TD align="left">    log(bool,uint256,uint256,uint256)</TD></TR><TR><TD align="left">    log(bool,uint256,uint256,string)</TD></TR><TR><TD align="left">    log(bool,uint256,uint256,bool)</TD></TR><TR><TD align="left">    log(bool,uint256,uint256,address)</TD></TR><TR><TD align="left">    log(bool,uint256,string,uint256)</TD></TR><TR><TD align="left">    log(bool,uint256,string,string)</TD></TR><TR><TD align="left">    log(bool,uint256,string,bool)</TD></TR><TR><TD align="left">    log(bool,uint256,string,address)</TD></TR><TR><TD align="left">    log(bool,uint256,bool,uint256)</TD></TR><TR><TD align="left">    log(bool,uint256,bool,string)</TD></TR><TR><TD align="left">    log(bool,uint256,bool,bool)</TD></TR><TR><TD align="left">    log(bool,uint256,bool,address)</TD></TR><TR><TD align="left">    log(bool,uint256,address,uint256)</TD></TR><TR><TD align="left">    log(bool,uint256,address,string)</TD></TR><TR><TD align="left">    log(bool,uint256,address,bool)</TD></TR><TR><TD align="left">    log(bool,uint256,address,address)</TD></TR><TR><TD align="left">    log(bool,string,uint256,uint256)</TD></TR><TR><TD align="left">    log(bool,string,uint256,string)</TD></TR><TR><TD align="left">    log(bool,string,uint256,bool)</TD></TR><TR><TD align="left">    log(bool,string,uint256,address)</TD></TR><TR><TD align="left">    log(bool,string,string,uint256)</TD></TR><TR><TD align="left">    log(bool,string,string,string)</TD></TR><TR><TD align="left">    log(bool,string,string,bool)</TD></TR><TR><TD align="left">    log(bool,string,string,address)</TD></TR><TR><TD align="left">    log(bool,string,bool,uint256)</TD></TR><TR><TD align="left">    log(bool,string,bool,string)</TD></TR><TR><TD align="left">    log(bool,string,bool,bool)</TD></TR><TR><TD align="left">    log(bool,string,bool,address)</TD></TR><TR><TD align="left">    log(bool,string,address,uint256)</TD></TR><TR><TD align="left">    log(bool,string,address,string)</TD></TR><TR><TD align="left">    log(bool,string,address,bool)</TD></TR><TR><TD align="left">    log(bool,string,address,address)</TD></TR><TR><TD align="left">    log(bool,bool,uint256,uint256)</TD></TR><TR><TD align="left">    log(bool,bool,uint256,string)</TD></TR><TR><TD align="left">    log(bool,bool,uint256,bool)</TD></TR><TR><TD align="left">    log(bool,bool,uint256,address)</TD></TR><TR><TD align="left">    log(bool,bool,string,uint256)</TD></TR><TR><TD align="left">    log(bool,bool,string,string)</TD></TR><TR><TD align="left">    log(bool,bool,string,bool)</TD></TR><TR><TD align="left">    log(bool,bool,string,address)</TD></TR><TR><TD align="left">    log(bool,bool,bool,uint256)</TD></TR><TR><TD align="left">    log(bool,bool,bool,string)</TD></TR><TR><TD align="left">    log(bool,bool,bool,bool)</TD></TR><TR><TD align="left">    log(bool,bool,bool,address)</TD></TR><TR><TD align="left">    log(bool,bool,address,uint256)</TD></TR><TR><TD align="left">    log(bool,bool,address,string)</TD></TR><TR><TD align="left">    log(bool,bool,address,bool)</TD></TR><TR><TD align="left">    log(bool,bool,address,address)</TD></TR><TR><TD align="left">    log(bool,address,uint256,uint256)</TD></TR><TR><TD align="left">    log(bool,address,uint256,string)</TD></TR><TR><TD align="left">    log(bool,address,uint256,bool)</TD></TR><TR><TD align="left">    log(bool,address,uint256,address)</TD></TR><TR><TD align="left">    log(bool,address,string,uint256)</TD></TR><TR><TD align="left">    log(bool,address,string,string)</TD></TR><TR><TD align="left">    log(bool,address,string,bool)</TD></TR><TR><TD align="left">    log(bool,address,string,address)</TD></TR><TR><TD align="left">    log(bool,address,bool,uint256)</TD></TR><TR><TD align="left">    log(bool,address,bool,string)</TD></TR><TR><TD align="left">    log(bool,address,bool,bool)</TD></TR><TR><TD align="left">    log(bool,address,bool,address)</TD></TR><TR><TD align="left">    log(bool,address,address,uint256)</TD></TR><TR><TD align="left">    log(bool,address,address,string)</TD></TR><TR><TD align="left">    log(bool,address,address,bool)</TD></TR><TR><TD align="left">    log(bool,address,address,address)</TD></TR><TR><TD align="left">    log(address,uint256,uint256,uint256)</TD></TR><TR><TD align="left">    log(address,uint256,uint256,string)</TD></TR><TR><TD align="left">    log(address,uint256,uint256,bool)</TD></TR><TR><TD align="left">    log(address,uint256,uint256,address)</TD></TR><TR><TD align="left">    log(address,uint256,string,uint256)</TD></TR><TR><TD align="left">    log(address,uint256,string,string)</TD></TR><TR><TD align="left">    log(address,uint256,string,bool)</TD></TR><TR><TD align="left">    log(address,uint256,string,address)</TD></TR><TR><TD align="left">    log(address,uint256,bool,uint256)</TD></TR><TR><TD align="left">    log(address,uint256,bool,string)</TD></TR><TR><TD align="left">    log(address,uint256,bool,bool)</TD></TR><TR><TD align="left">    log(address,uint256,bool,address)</TD></TR><TR><TD align="left">    log(address,uint256,address,uint256)</TD></TR><TR><TD align="left">    log(address,uint256,address,string)</TD></TR><TR><TD align="left">    log(address,uint256,address,bool)</TD></TR><TR><TD align="left">    log(address,uint256,address,address)</TD></TR><TR><TD align="left">    log(address,string,uint256,uint256)</TD></TR><TR><TD align="left">    log(address,string,uint256,string)</TD></TR><TR><TD align="left">    log(address,string,uint256,bool)</TD></TR><TR><TD align="left">    log(address,string,uint256,address)</TD></TR><TR><TD align="left">    log(address,string,string,uint256)</TD></TR><TR><TD align="left">    log(address,string,string,string)</TD></TR><TR><TD align="left">    log(address,string,string,bool)</TD></TR><TR><TD align="left">    log(address,string,string,address)</TD></TR><TR><TD align="left">    log(address,string,bool,uint256)</TD></TR><TR><TD align="left">    log(address,string,bool,string)</TD></TR><TR><TD align="left">    log(address,string,bool,bool)</TD></TR><TR><TD align="left">    log(address,string,bool,address)</TD></TR><TR><TD align="left">    log(address,string,address,uint256)</TD></TR><TR><TD align="left">    log(address,string,address,string)</TD></TR><TR><TD align="left">    log(address,string,address,bool)</TD></TR><TR><TD align="left">    log(address,string,address,address)</TD></TR><TR><TD align="left">    log(address,bool,uint256,uint256)</TD></TR><TR><TD align="left">    log(address,bool,uint256,string)</TD></TR><TR><TD align="left">    log(address,bool,uint256,bool)</TD></TR><TR><TD align="left">    log(address,bool,uint256,address)</TD></TR><TR><TD align="left">    log(address,bool,string,uint256)</TD></TR><TR><TD align="left">    log(address,bool,string,string)</TD></TR><TR><TD align="left">    log(address,bool,string,bool)</TD></TR><TR><TD align="left">    log(address,bool,string,address)</TD></TR><TR><TD align="left">    log(address,bool,bool,uint256)</TD></TR><TR><TD align="left">    log(address,bool,bool,string)</TD></TR><TR><TD align="left">    log(address,bool,bool,bool)</TD></TR><TR><TD align="left">    log(address,bool,bool,address)</TD></TR><TR><TD align="left">    log(address,bool,address,uint256)</TD></TR><TR><TD align="left">    log(address,bool,address,string)</TD></TR><TR><TD align="left">    log(address,bool,address,bool)</TD></TR><TR><TD align="left">    log(address,bool,address,address)</TD></TR><TR><TD align="left">    log(address,address,uint256,uint256)</TD></TR><TR><TD align="left">    log(address,address,uint256,string)</TD></TR><TR><TD align="left">    log(address,address,uint256,bool)</TD></TR><TR><TD align="left">    log(address,address,uint256,address)</TD></TR><TR><TD align="left">    log(address,address,string,uint256)</TD></TR><TR><TD align="left">    log(address,address,string,string)</TD></TR><TR><TD align="left">    log(address,address,string,bool)</TD></TR><TR><TD align="left">    log(address,address,string,address)</TD></TR><TR><TD align="left">    log(address,address,bool,uint256)</TD></TR><TR><TD align="left">    log(address,address,bool,string)</TD></TR><TR><TD align="left">    log(address,address,bool,bool)</TD></TR><TR><TD align="left">    log(address,address,bool,address)</TD></TR><TR><TD align="left">    log(address,address,address,uint256)</TD></TR><TR><TD align="left">    log(address,address,address,string)</TD></TR><TR><TD align="left">    log(address,address,address,bool)</TD></TR><TR><TD align="left">    log(address,address,address,address)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    CONSOLE_ADDRESS</TD></TR></TABLE> >];

}